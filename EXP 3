-------- system calls of the UNIX OS ---------
#include <iostream> 
#include <unistd.h>  
#include <sys/types.h>  
#include <sys/wait.h>   
#include <cstdlib>      
using namespace std; 
int main() { 
    pid_t pid; 

    pid = fork(); 
 
    if (pid < 0) { 
        cerr << "Fork failed." << endl; 
        exit(1); 
    }  
 
    else if (pid == 0) { 
        cout << "Child Process:" << endl; 
        cout << "Child PID : " << getpid() << endl; 
        cout << "Parent PID: " << getppid() << endl; 
        execlp("/bin/ls", "ls", "-l", NULL); 
        cerr << "Exec failed." << endl; 
        exit(1); 
    }  
 
    else { 
        wait(NULL);  
        cout << "Parent Process:" << endl; 
        cout << "Parent PID: " << getpid() << endl; 
    } 
    return 0; 
} 

---------- I/O system calls of UNIX OS----------
#include <iostream>
#include <unistd.h>   
#include <fcntl.h>  
#include <sys/types.h>
#include <sys/stat.h>
using namespace std;

int main() {
    int fd, n;
    char buffer[100];

    cout << "Enter text to write in the file:\n";
    n = read(0, buffer, sizeof(buffer)); 

    fd = open("A.txt", O_CREAT | O_WRONLY | O_TRUNC, 0644); 
    if (fd < 0) {
        perror("File open error");
        return 1;
    }

    write(fd, buffer, n);   
    write(1, buffer, n);   

    close(fd);  
    return 0;
}
